Vytvoření presenteru
####################

.[perex]
V této kapitole si představíme presentery a vše, co s nimi souvisí. Ukážeme si, jak napsat vlastní presenter,
jak psát v šablonovacím jazyce Latte a jak využívat model, který jsme již dříve napsali.

--------


Na začátek se bohužel nevyheneme troše teorie. Nette využívá architekturu MVP, Model-View-Presenter. Základními kameny
této architektury jsou:

- **Model** - datová a funkční vrstva aplikace, která se stará o ukládání dat a aplikační logiku. Jakoukoliv událost uživatele
(přihlášení, zobrazení či změna dat, vložení zboží do košíku) představuje akci modelu. Ten má pevně dané rozhraní, pomocí kterého
s ním ostatní části aplikace komunikují, a sám o svém okolí nic neví.
- **View**, nebo také "pohled" - stará se o samotné vykreslení výsledku požadavku uživatele. V Nette tuto část
představují šablony.
- **Presenter** - obě předchozí vrstvy spojuje dohromady. Nejprve na základě požadavku od uživatele vyvolá příslušnou
aplikační logiku (např. zmíněné přidání zboží do košíku či zobrazení dat) a pak požádá view o vykreslení výsledku.

.[note]
Architektura MVP je podobná architektuře MVC((Model-View-Controller)). Obě architektury se liší hlavně v úloze jejich
cetrálního kamenu, tedy Presenter × Controller. Presenter hraje čistě roli prostředníka, který jen volá model a
výsledky předává view, kdežto Controller má navíc na starosti i některé události uživatelského rozhraní.

Model již máme díky `Nette\Database` připravený. Zbývá nám tedy presenter a view.

